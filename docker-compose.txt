version: '3.8'

services:
  profootball-ai:
    build: .
    container_name: profootball-ai
    ports:
      - "8501:8501"
    environment:
      - API_FOOTBALL_KEY=${API_FOOTBALL_KEY}
      - DATABASE_URL=postgresql://postgres:password@db:5432/profootball
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=${DEBUG:-False}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - profootball-network

  db:
    image: postgres:14-alpine
    container_name: profootball-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=profootball
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - profootball-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: profootball-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - profootball-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: profootball-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - profootball-ai
    restart: unless-stopped
    networks:
      - profootball-network

volumes:
  postgres_data:
  redis_data:

networks:
  profootball-network:
    driver: bridge